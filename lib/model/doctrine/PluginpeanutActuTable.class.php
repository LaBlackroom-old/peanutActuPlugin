<?php

/**
 * PluginpeanutActuTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginpeanutActuTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PluginpeanutActuTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('peanutActu');
    }
    
    
    /**
     * Retrieves actu object.
     *
     * @return peanutActu
     */
    public function getActu()
    {
      $p = $this->createQuery('p')
              ->leftJoin('p.sfGuardUser s')
              ->leftJoin('p.peanutSeo o')
              ->orderBy('p.updated_at DESC');
      
      return $p;
    }
    
    
    /**
     * Show an actu.
     *
     * @param  string|int $actu     The id or slug of actu
     *
     * @return peanutActu
     */
    public function showActu($actu)
    {
      $p = $this->getActu()
              ->where('p.id = ? OR p.slug = ?', array($actu, $actu));
      
      return $p;
    }
    
    /**
     * Get all actus.
     *
     * @param  string     $status   The status of actus
     *
     * @return peanutActu
     */
    public function getActus($status = 'publish')
    {
      $p = $this->getActu()
              ->where('p.status = ?', $status);
      
      return $p;
    }
    
    /**
     * Get all actus.
     *
     * @param  string     $limit    Determines how much items you want (default 3)
     * @param  string     $status   The status of actus
     *
     * @return peanutActu
     */
    public function getLastActus($limit = 3, $status = 'publish')
    {
      $p = $this->getActus()
              ->limit($limit);
      
      return $p;
    }
    
    
    /**
     * Retrieves actus object by author.
     *
     * @param  string|int $author   The id or username of author
     * @param  string     $status   The status of actu
     *
     * @return peanutActu
     */
    public function getActusByAuthor($author, $status = 'publish')
    {
      $p = $this->getActus()
              ->andWhere('s.id = ? OR s.username = ?', array($author, $author));
      
      return $p;
    }
}